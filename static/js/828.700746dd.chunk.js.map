{"version":3,"file":"static/js/828.700746dd.chunk.js","mappings":"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","sources":["../node_modules/@ledgerhq/devices/src/hid-framing.ts","../node_modules/@ledgerhq/devices/node_modules/lru-cache/index.js","../node_modules/@ledgerhq/devices/node_modules/semver/classes/comparator.js","../node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js","../node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/clean.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/cmp.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/coerce.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-build.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-loose.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/diff.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/eq.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/gt.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/gte.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/inc.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/lt.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/lte.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/major.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/minor.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/neq.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/parse.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/patch.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/prerelease.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/rcompare.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/rsort.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/satisfies.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/sort.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/valid.js","../node_modules/@ledgerhq/devices/node_modules/semver/index.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/constants.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/debug.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/identifiers.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/parse-options.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/re.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/gtr.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/intersects.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/ltr.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/max-satisfying.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-satisfying.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-version.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/outside.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/simplify.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/subset.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/to-comparators.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/valid.js","../node_modules/@ledgerhq/devices/src/index.ts","../node_modules/@ledgerhq/logs/src/index.ts","../node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts","../node_modules/yallist/iterator.js","../node_modules/yallist/yallist.js"],"sourcesContent":["import { TransportError } from \"@ledgerhq/errors\";\nexport type ResponseAcc =\n  | {\n      data: Buffer;\n      dataLength: number;\n      sequence: number;\n    }\n  | null\n  | undefined;\nconst Tag = 0x05;\n\nfunction asUInt16BE(value) {\n  const b = Buffer.alloc(2);\n  b.writeUInt16BE(value, 0);\n  return b;\n}\n\nconst initialAcc = {\n  data: Buffer.alloc(0),\n  dataLength: 0,\n  sequence: 0,\n};\n\n/**\n *\n */\nconst createHIDframing = (channel: number, packetSize: number) => {\n  return {\n    makeBlocks(apdu: Buffer): Buffer[] {\n      let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n      const blockSize = packetSize - 5;\n      const nbBlocks = Math.ceil(data.length / blockSize);\n      data = Buffer.concat([\n        data, // fill data with padding\n        Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0),\n      ]);\n      const blocks: Buffer[] = [];\n\n      for (let i = 0; i < nbBlocks; i++) {\n        const head = Buffer.alloc(5);\n        head.writeUInt16BE(channel, 0);\n        head.writeUInt8(Tag, 2);\n        head.writeUInt16BE(i, 3);\n        const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n        blocks.push(Buffer.concat([head, chunk]));\n      }\n\n      return blocks;\n    },\n\n    reduceResponse(acc: ResponseAcc, chunk: Buffer): ResponseAcc {\n      let { data, dataLength, sequence } = acc || initialAcc;\n\n      if (chunk.readUInt16BE(0) !== channel) {\n        throw new TransportError(\"Invalid channel\", \"InvalidChannel\");\n      }\n\n      if (chunk.readUInt8(2) !== Tag) {\n        throw new TransportError(\"Invalid tag\", \"InvalidTag\");\n      }\n\n      if (chunk.readUInt16BE(3) !== sequence) {\n        throw new TransportError(\"Invalid sequence\", \"InvalidSequence\");\n      }\n\n      if (!acc) {\n        dataLength = chunk.readUInt16BE(5);\n      }\n\n      sequence++;\n      const chunkData = chunk.slice(acc ? 5 : 7);\n      data = Buffer.concat([data, chunkData]);\n\n      if (data.length > dataLength) {\n        data = data.slice(0, dataLength);\n      }\n\n      return {\n        data,\n        dataLength,\n        sequence,\n      };\n    },\n\n    getReducedResult(acc: ResponseAcc): Buffer | null | undefined {\n      if (acc && acc.dataLength === acc.data.length) {\n        return acc.data;\n      }\n    },\n  };\n};\n\nexport default createHIDframing;\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false,\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceTilde(c, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceCaret(c, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((c) => {\n    return replaceXRange(c, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const { MAX_LENGTH } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((o, k) => {\n    o[k] = true\n    return o\n  }, {})\nmodule.exports = parseOptions\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = [new Comparator('>=0.0.0-0')]\n    } else {\n      sub = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","import semver from \"semver\";\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\nexport const IIGenericHID = 0x01;\nexport const IIKeyboardHID = 0x02;\nexport const IIU2F = 0x04;\nexport const IICCID = 0x08;\nexport const IIWebUSB = 0x10;\n\nexport enum DeviceModelId {\n  blue = \"blue\",\n  nanoS = \"nanoS\",\n  nanoSP = \"nanoSP\",\n  nanoX = \"nanoX\",\n  nanoFTS = \"nanoFTS\",\n}\n\nconst devices: { [key in DeviceModelId]: DeviceModel } = {\n  [DeviceModelId.blue]: {\n    id: DeviceModelId.blue,\n    productName: \"Ledger Blue\",\n    productIdMM: 0x00,\n    legacyUsbProductId: 0x0000,\n    usbOnly: true,\n    memorySize: 480 * 1024,\n    masks: [0x31000000, 0x31010000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n  },\n  [DeviceModelId.nanoS]: {\n    id: DeviceModelId.nanoS,\n    productName: \"Ledger Nano S\",\n    productIdMM: 0x10,\n    legacyUsbProductId: 0x0001,\n    usbOnly: true,\n    memorySize: 320 * 1024,\n    masks: [0x31100000],\n    getBlockSize: (firmwareVersion: string): number =>\n      semver.lt(semver.coerce(firmwareVersion) ?? \"\", \"2.0.0\")\n        ? 4 * 1024\n        : 2 * 1024,\n  },\n  [DeviceModelId.nanoSP]: {\n    id: DeviceModelId.nanoSP,\n    productName: \"Ledger Nano S Plus\",\n    productIdMM: 0x50,\n    legacyUsbProductId: 0x0005,\n    usbOnly: true,\n    memorySize: 1536 * 1024,\n    masks: [0x33100000],\n    getBlockSize: (_firmwareVersion: string): number => 32,\n  },\n  [DeviceModelId.nanoX]: {\n    id: DeviceModelId.nanoX,\n    productName: \"Ledger Nano X\",\n    productIdMM: 0x40,\n    legacyUsbProductId: 0x0004,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024,\n    masks: [0x33000000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\",\n      },\n    ],\n  },\n  [DeviceModelId.nanoFTS]: {\n    id: DeviceModelId.nanoFTS,\n    productName: \"Ledger Nano FTS\",\n    productIdMM: 0x60,\n    legacyUsbProductId: 0x0006,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024, // ← ↓ TODO Update with actual values\n    masks: [0x33200000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-6004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-6004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-6004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-6004-0003-4c6564676572\",\n      },\n    ],\n  },\n};\n\nconst productMap = {\n  Blue: DeviceModelId.blue,\n  \"Nano S\": DeviceModelId.nanoS,\n  \"Nano S Plus\": DeviceModelId.nanoSP,\n  \"Nano X\": DeviceModelId.nanoX,\n  \"Nano FTS\": DeviceModelId.nanoFTS,\n};\n\nconst devicesList: DeviceModel[] = Object.values(devices);\n\n/**\n *\n */\nexport const ledgerUSBVendorId = 0x2c97;\n\n/**\n *\n */\nexport const getDeviceModel = (id: DeviceModelId): DeviceModel => {\n  const info = devices[id];\n  if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n  return info;\n};\n\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */\nexport const identifyTargetId = (\n  targetId: number\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find(({ masks }) =>\n    masks.find((mask) => (targetId & 0xffff0000) === mask)\n  );\n\n  return deviceModel;\n};\n\n/**\n *\n */\nexport const identifyUSBProductId = (\n  usbProductId: number\n): DeviceModel | null | undefined => {\n  const legacy = devicesList.find((d) => d.legacyUsbProductId === usbProductId);\n  if (legacy) return legacy;\n  const mm = usbProductId >> 8;\n  const deviceModel = devicesList.find((d) => d.productIdMM === mm);\n  return deviceModel;\n};\n\nexport const identifyProductName = (\n  productName: string\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find((d) => d.id === productMap[productName]);\n  return deviceModel;\n};\n\nconst bluetoothServices: string[] = [];\nconst serviceUuidToInfos: Record<string, BluetoothInfos> = {};\n\nfor (const id in devices) {\n  const deviceModel = devices[id];\n  const { bluetoothSpec } = deviceModel;\n  if (bluetoothSpec) {\n    for (let i = 0; i < bluetoothSpec.length; i++) {\n      const spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[\n        spec.serviceUuid.replace(/-/g, \"\")\n      ] = {\n        deviceModel,\n        ...spec,\n      };\n    }\n  }\n}\n\n/**\n *\n */\nexport const getBluetoothServiceUuids = (): string[] => bluetoothServices;\n\n/**\n *\n */\nexport const getInfosForServiceUuid = (\n  uuid: string\n): BluetoothInfos | undefined => serviceUuidToInfos[uuid.toLowerCase()];\n\n/**\n *\n */\nexport interface DeviceModel {\n  id: DeviceModelId;\n  productName: string;\n  productIdMM: number;\n  legacyUsbProductId: number;\n  usbOnly: boolean;\n  memorySize: number;\n  masks: number[];\n  // blockSize: number, // THIS FIELD IS DEPRECATED, use getBlockSize\n  getBlockSize: (firmwareVersion: string) => number;\n  bluetoothSpec?: {\n    serviceUuid: string;\n    writeUuid: string;\n    writeCmdUuid: string;\n    notifyUuid: string;\n  }[];\n}\n\n/**\n *\n */\nexport interface BluetoothInfos {\n  deviceModel: DeviceModel;\n  serviceUuid: string;\n  writeUuid: string;\n  writeCmdUuid: string;\n  notifyUuid: string;\n}\n","/**\n * A Log object\n */\nexport interface Log {\n  type: string;\n  message?: string;\n  data?: any;\n  // unique amount all logs\n  id: string;\n  // date of the log\n  date: Date;\n}\nexport type Unsubscribe = () => void;\nexport type Subscriber = (arg0: Log) => void;\nlet id = 0;\nconst subscribers: Subscriber[] = [];\n\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type: string, message?: string, data?: any) => {\n  const obj: Log = {\n    type,\n    id: String(++id),\n    date: new Date(),\n  };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb: Subscriber): Unsubscribe => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log: Log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// for debug purpose\n\ndeclare global {\n  interface Window {\n    __ledgerLogsListen: any;\n  }\n}\n\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n","import Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription,\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId, ledgerUSBVendorId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n  TransportError,\n} from \"@ledgerhq/errors\";\n\nconst ledgerDevices = [\n  {\n    vendorId: ledgerUSBVendorId,\n  },\n];\n\nconst isSupported = () =>\n  Promise.resolve(!!(window.navigator && window.navigator.hid));\n\nconst getHID = (): HID => {\n  // $FlowFixMe\n  const { hid } = navigator;\n  if (!hid)\n    throw new TransportError(\n      \"navigator.hid is not supported\",\n      \"HIDNotSupported\"\n    );\n  return hid;\n};\n\nasync function requestLedgerDevices(): Promise<HIDDevice[]> {\n  const device = await getHID().requestDevice({\n    filters: ledgerDevices,\n  });\n  if (Array.isArray(device)) return device;\n  return [device];\n}\n\nasync function getLedgerDevices(): Promise<HIDDevice[]> {\n  const devices = await getHID().getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nasync function getFirstLedgerDevice(): Promise<HIDDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  const devices = await requestLedgerDevices();\n  return devices[0];\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\n\nexport default class TransportWebHID extends Transport {\n  device: HIDDevice;\n  deviceModel: DeviceModel | null | undefined;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n\n  constructor(device: HIDDevice) {\n    super();\n    this.device = device;\n    this.deviceModel =\n      typeof device.productId === \"number\"\n        ? identifyUSBProductId(device.productId)\n        : undefined;\n    device.addEventListener(\"inputreport\", this.onInputReport);\n  }\n\n  inputs: Buffer[] = [];\n  inputCallback: ((arg0: Buffer) => void) | null | undefined;\n  read = (): Promise<Buffer> => {\n    if (this.inputs.length) {\n      return Promise.resolve((this.inputs.shift() as unknown) as Buffer);\n    }\n\n    return new Promise((success) => {\n      this.inputCallback = success;\n    });\n  };\n  onInputReport = (e: HIDInputReportEvent) => {\n    const buffer = Buffer.from(e.data.buffer);\n\n    if (this.inputCallback) {\n      this.inputCallback(buffer);\n      this.inputCallback = null;\n    } else {\n      this.inputs.push(buffer);\n    }\n  };\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<HIDDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      (device) => {\n        if (!device) {\n          observer.error(\n            new TransportOpenUserCancelled(\"Access denied to use Ledger device\")\n          );\n        } else if (!unsubscribed) {\n          const deviceModel =\n            typeof device.productId === \"number\"\n              ? identifyUSBProductId(device.productId)\n              : undefined;\n          observer.next({\n            type: \"add\",\n            descriptor: device,\n            deviceModel,\n          });\n          observer.complete();\n        }\n      },\n      (error) => {\n        observer.error(new TransportOpenUserCancelled(error.message));\n      }\n    );\n\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n\n    return {\n      unsubscribe,\n    };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const [device] = await requestLedgerDevices();\n    return TransportWebHID.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebHID.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a HIDDevice\n   */\n  static async open(device: HIDDevice) {\n    await device.open();\n    const transport = new TransportWebHID(device);\n\n    const onDisconnect = (e) => {\n      if (device === e.device) {\n        getHID().removeEventListener(\"disconnect\", onDisconnect);\n\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n\n    getHID().addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    this.device.removeEventListener(\"inputreport\", this.onInputReport);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = async (apdu: Buffer): Promise<Buffer> => {\n    const b = await this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n      const framing = hidFraming(channel, packetSize);\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.sendReport(0, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n\n      while (!(result = framing.getReducedResult(acc))) {\n        const buffer = await this.read();\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch((e) => {\n      if (e && e.message && e.message.includes(\"write\")) {\n        this._emitDisconnect(e);\n\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n\n      throw e;\n    });\n    return b as Buffer;\n  };\n\n  setScrambleKey() {}\n}\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n"],"names":["asUInt16BE","value","b","Buffer","alloc","writeUInt16BE","initialAcc","data","dataLength","sequence","exports","channel","packetSize","makeBlocks","apdu","concat","length","blockSize","nbBlocks","Math","ceil","fill","blocks","i","head","writeUInt8","chunk","slice","push","reduceResponse","acc","readUInt16BE","errors_1","readUInt8","chunkData","getReducedResult","Yallist","require","MAX","Symbol","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","LRUCache","options","max","TypeError","this","Infinity","lc","stale","maxAge","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","trim","allowStale","mA","lC","forEach","hit","key","fn","thisp","walker","tail","prev","forEachStep","next","toArray","map","k","Map","isStale","v","e","now","filter","h","Date","len","has","del","get","item","Entry","unshift","set","node","arr","l","expiresAt","self","doUse","unshiftNode","diff","delete","removeNode","undefined","call","module","ANY","Comparator","comp","parseOptions","loose","debug","parse","semver","operator","version","r","re","t","COMPARATORLOOSE","COMPARATOR","m","match","SemVer","er","cmp","includePrerelease","Range","test","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","range","raw","format","split","parseRange","c","first","isNullSet","isAny","comps","join","memoOpts","Object","keys","memoKey","cached","cache","hr","HYPHENRANGELOOSE","HYPHENRANGE","replace","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","rangeList","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","parseComparator","replaceGTE0","rangeMap","comparators","size","result","values","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","intersects","testSet","remainingComparators","testComparator","pop","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","id","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","compareIdentifiers","LOOSE","FULL","num","build","other","compareMain","comparePre","a","release","identifier","inc","isNaN","Error","s","eq","neq","gt","gte","lt","lte","op","String","rtl","COERCERTL","exec","index","lastIndex","COERCE","versionA","versionB","compare","compareBuild","version1","version2","v1","v2","hasPre","prefix","defaultResult","parsed","list","sort","internalRe","src","tokens","SEMVER_SPEC_VERSION","rcompareIdentifiers","valid","clean","rcompare","compareLoose","rsort","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","Number","MAX_SAFE_COMPONENT_LENGTH","process","NODE_DEBUG","args","console","error","numeric","anum","bnum","opts","reduce","o","R","createToken","name","isGlobal","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","LONETILDE","LONECARET","r1","r2","versions","maxSV","rangeObj","min","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","ranges","simplified","original","simpleSubset","sub","dom","gtltComp","eqSet","Set","higherGT","lowerLT","add","higher","lower","hasDomLT","hasDomGT","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","DeviceModelId","devices","blue","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","masks","getBlockSize","_firwareVersion","_a","nanoS","firmwareVersion","nanoSP","_firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","writeCmdUuid","nanoFTS","devicesList","identifyUSBProductId","usbProductId","legacy","find","d","mm","bluetoothServices","serviceUuidToInfos","deviceModel","spec","__assign","subscribers","log","type","message","obj","date","dispatch","window","__ledgerLogsListen","cb","indexOf","ledgerDevices","vendorId","isSupported","Promise","resolve","navigator","hid","getHID","TransportError","requestLedgerDevices","requestDevice","filters","device","Array","isArray","getLedgerDevices","getDevices","_super","_this","floor","random","inputs","shift","success","inputCallback","buffer","_disconnectEmitted","emit","exchangeAtomicImpl","toString","framing","hidFraming","sendReport","_b","read","includes","_emitDisconnect","DisconnectedDeviceDuringOperation","productId","addEventListener","onInputReport","__extends","TransportWebHID","open","transport","onDisconnect","removeEventListener","DisconnectedDevice","exchangeBusyPromise","close","observer","unsubscribed","existingDevices","getFirstLedgerDevice","then","descriptor","complete","TransportOpenUserCancelled","unsubscribe","Transport","prototype","iterator","arguments","insert","inserted","Node","create","pushNode","res","forEachReverse","n","getReverse","mapReverse","initial","reduceReverse","toArrayReverse","sliceReverse","splice","start","deleteCount","reverse"],"sourceRoot":""}